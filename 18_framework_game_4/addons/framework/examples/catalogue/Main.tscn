[gd_scene load_steps=16 format=2]

[ext_resource path="res://addons/framework/catalogue/Catalogue.gd" type="Script" id=1]
[ext_resource path="res://addons/framework/catalogue/CatalogueControl.tscn" type="PackedScene" id=2]
[ext_resource path="res://addons/framework/common/delegates/game_delegate.tres" type="Resource" id=3]
[ext_resource path="res://addons/framework/examples/catalogue/Initializer.gd" type="Script" id=4]
[ext_resource path="res://addons/framework/catalogue/resources/CatalogueCardItem.gd" type="Script" id=5]
[ext_resource path="res://addons/framework/examples/common/Character.gd" type="Script" id=6]
[ext_resource path="res://addons/framework/examples/common/Character.tscn" type="PackedScene" id=7]
[ext_resource path="res://addons/framework/assets/materials/checker_material.tres" type="Material" id=8]
[ext_resource path="res://addons/framework/examples/catalogue/GameManager.gd" type="Script" id=9]
[ext_resource path="res://addons/framework/examples/common/SceneLoaderMock.gd" type="Script" id=10]

[sub_resource type="Resource" id=1]
script = ExtResource( 5 )
id = "Potion"
type = "Item"
name = "Potion"
description = "Potion"
image = null

[sub_resource type="Resource" id=2]
script = ExtResource( 5 )
id = "Actor"
type = "Document"
name = "Actor"
description = "Actor"
image = null

[sub_resource type="ProceduralSkyMaterial" id=3]

[sub_resource type="Sky" id=4]
sky_material = SubResource( 3 )

[sub_resource type="Environment" id=5]
background_mode = 2
sky = SubResource( 4 )

[node name="Main" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}
scene_loader = NodePath("SceneLoader")
game_delegate = ExtResource( 3 )

[node name="SceneLoader" type="Node" parent="."]
script = ExtResource( 10 )

[node name="Label" type="Label" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
text = "Catalogue

Catalogue is an implementation of the inventory interface provided in common package. 

- This component allows to store items (resources) into a database to be used for any interface or logic attached to it.
- Items can be added directly from the Catalogue node. 
- The player, enemies or any NPC can have its own Inventory to store items, this way it would be easier to control the items belonging by each character with the current state.
- GameDelegate is attached so it can publish an event to pause the current scenes by the GameManager.

Press Q (inventory) key to show the Catalogue interface in order to watch the items stored. 

"
align = 1
autowrap = true
structured_text_bidi_override_options = [  ]
script = null
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Initializer" type="Node" parent="."]
script = ExtResource( 4 )
inventory = NodePath("../Catalogue")
item_1 = SubResource( 1 )
item_2 = SubResource( 2 )

[node name="Catalogue" type="Node" parent="."]
script = ExtResource( 1 )
enabled = true
actor_path = NodePath("..")
items = [  ]

[node name="CatalogueControl" parent="." instance=ExtResource( 2 )]
pause_mode = 2
enabled = true
game_delegate = ExtResource( 3 )
inventory = NodePath("../Catalogue")
transition_speed = 4.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 5 )
script = null

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform( 0.745488, 0.41787, 0.519262, -0.666519, 0.467379, 0.580783, 0, -0.779065, 0.626944, 0, 7.04207, 0 )
shadow_enabled = true
shadow_bias = 0.005
script = null

[node name="Floor" type="CSGBox3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.25, 0 )
use_collision = true
size = Vector3( 200, 0.5, 200 )
material = ExtResource( 8 )
script = null

[node name="Player" parent="." instance=ExtResource( 7 )]
script = ExtResource( 6 )

[node name="Camera3D" type="Camera3D" parent="Player"]
transform = Transform( 1, 0, 0, 0, 0.939693, 0.34202, 0, -0.34202, 0.939693, 0, 5, 4 )
script = null
