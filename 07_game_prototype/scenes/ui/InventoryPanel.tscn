[gd_scene load_steps=30 format=2]

[ext_resource path="res://scenes/ui/InventoryPanel.gd" type="Script" id=1]
[ext_resource path="res://assets/ui/dialogbox.png" type="Texture" id=2]
[ext_resource path="res://assets/ui/dialog_actor.png" type="Texture" id=3]
[ext_resource path="res://assets/fonts/ArcaMajora3-Bold.otf" type="DynamicFontData" id=4]
[ext_resource path="res://assets/fonts/ArcaMajora3-Heavy.otf" type="DynamicFontData" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0.0208333, 0.331019, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = SubResource( 4 )

[sub_resource type="VisualShaderNodeTransformVecMult" id=6]
output_port_for_preview = 0
default_input_values = [ 0, Transform( 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=8]
source = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "y_scale"

[sub_resource type="VisualShaderNodeScalarUniform" id=12]
uniform_name = "x_scale2"

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorFunc" id=15]
function = 14

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=17]

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[sub_resource type="VisualShader" id=21]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float x_scale2;
uniform float y_scale;
uniform sampler2D tex_frg_4;



void vertex() {
// Input:3
	vec3 n_out3p0 = vec3(VERTEX, 0.0);

// VectorDecompose:9
	float n_out9p0 = n_out3p0.x;
	float n_out9p1 = n_out3p0.y;
	float n_out9p2 = n_out3p0.z;

// Input:2
	float n_out2p0 = TIME;

// ScalarFunc:5
	float n_out5p0 = sin(n_out2p0);

// ScalarUniform:15
	float n_out15p0 = x_scale2;

// ScalarOp:11
	float n_out11p0 = n_out5p0 * n_out15p0;

// ScalarOp:7
	float n_out7p0 = n_out9p0 + n_out11p0;

// VectorFunc:4
	vec3 n_out4p0 = cos(vec3(n_out2p0));

// ScalarUniform:14
	float n_out14p0 = y_scale;

// ScalarOp:10
	float n_out10p0 = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)) * n_out14p0;

// ScalarOp:8
	float n_out8p0 = n_out9p1 + n_out10p0;

// VectorCompose:6
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out7p0, n_out8p0, n_in6p2);

// Output:0
	VERTEX = n_out6p0.xy;

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Input:8

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out2p0.xy);
		n_out9p0 = _tex_read.rgb;
		n_out9p1 = _tex_read.a;
	}

// TransformVectorMult:7
	mat4 n_in7p0 = mat4(vec4(0.00000, 0.00000, 0.00000, 0.0), vec4(1.00000, 0.00000, 0.00000, 0.0), vec4(0.00000, 0.00000, 0.00000, 0.0), vec4(0.00000, 0.00000, 0.00000, 1.0));
	vec3 n_out7p0 = (n_in7p0 * vec4(n_out2p0, 1.0)).xyz;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out7p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out9p1) * n_out4p0;

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -17.94, 44.2371 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/vertex/0/position = Vector2( 2260, 80 )
nodes/vertex/2/node = SubResource( 13 )
nodes/vertex/2/position = Vector2( -220, 180 )
nodes/vertex/3/node = SubResource( 14 )
nodes/vertex/3/position = Vector2( -200, -200 )
nodes/vertex/4/node = SubResource( 15 )
nodes/vertex/4/position = Vector2( 220, 280 )
nodes/vertex/5/node = SubResource( 16 )
nodes/vertex/5/position = Vector2( 220, 60 )
nodes/vertex/6/node = SubResource( 17 )
nodes/vertex/6/position = Vector2( 1900, 80 )
nodes/vertex/7/node = SubResource( 18 )
nodes/vertex/7/position = Vector2( 1480, -140 )
nodes/vertex/8/node = SubResource( 19 )
nodes/vertex/8/position = Vector2( 1480, 240 )
nodes/vertex/9/node = SubResource( 20 )
nodes/vertex/9/position = Vector2( 800, -220 )
nodes/vertex/10/node = SubResource( 9 )
nodes/vertex/10/position = Vector2( 860, 280 )
nodes/vertex/11/node = SubResource( 10 )
nodes/vertex/11/position = Vector2( 860, 40 )
nodes/vertex/14/node = SubResource( 11 )
nodes/vertex/14/position = Vector2( 140, 540 )
nodes/vertex/15/node = SubResource( 12 )
nodes/vertex/15/position = Vector2( 140, 440 )
nodes/vertex/connections = PoolIntArray( 2, 0, 4, 0, 8, 0, 6, 1, 7, 0, 6, 0, 2, 0, 5, 0, 3, 0, 9, 0, 9, 1, 8, 0, 6, 0, 0, 0, 5, 0, 11, 0, 4, 0, 10, 0, 9, 0, 7, 0, 14, 0, 10, 1, 15, 0, 11, 1, 11, 0, 7, 1, 10, 0, 8, 1 )
nodes/fragment/0/position = Vector2( 1980, -60 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 120, 140 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 1000, 340 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 520, 440 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 120, -40 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 600, -120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1440, 40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 1, 7, 0, 4, 0, 8, 0, 9, 2, 2, 0, 9, 0, 9, 1, 10, 0, 4, 0, 10, 1, 10, 0, 0, 1, 9, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=22]
shader = SubResource( 21 )
shader_param/x_scale2 = null
shader_param/y_scale = null

[sub_resource type="DynamicFont" id=23]
size = 21
font_data = ExtResource( 5 )

[sub_resource type="DynamicFont" id=24]
size = 9
font_data = ExtResource( 4 )

[node name="InventoryPanel" type="Popup"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 170.0
margin_bottom = -163.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" type="TextureRect" parent="."]
modulate = Color( 1, 1, 1, 0.0313726 )
material = SubResource( 22 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 2 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Image" type="TextureRect" parent="."]
modulate = Color( 1, 1, 1, 0.101961 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 30.0
margin_top = 30.0
margin_right = -30.0
margin_bottom = -30.0
texture = ExtResource( 3 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Container" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 50.0
margin_top = 20.0
margin_right = -50.0
margin_bottom = -50.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Container"]
margin_right = 1094.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = SubResource( 23 )
text = "Item"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="RichTextLabel" parent="Container"]
margin_top = 44.0
margin_right = 1094.0
margin_bottom = 367.0
size_flags_vertical = 3
custom_fonts/normal_font = SubResource( 24 )
bbcode_text = "This is going to be a description of the item"
text = "This is going to be a description of the item"
__meta__ = {
"_edit_use_anchors_": false
}
