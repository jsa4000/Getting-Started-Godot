[gd_resource type="ShaderMaterial" load_steps=22 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0.12, 0.3264 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeTransformVecMult" id=7]
default_input_values = [ 0, Transform( 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=19]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShader" id=20]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_2;
uniform sampler2D tex_frg_5;



void vertex() {
// Input:4
	vec3 n_out4p0 = VERTEX;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_vtx_2_read = texture(tex_vtx_2, n_out3p0.xy);
	vec3 n_out2p0 = tex_vtx_2_read.rgb;
	float n_out2p1 = tex_vtx_2_read.a;

// Input:7
	float n_out7p0 = TIME;

// ScalarFunc:10
	float n_out10p0 = sin(n_out7p0);

// ScalarOp:13
	float n_in13p1 = 10.00000;
	float n_out13p0 = n_out10p0 / n_in13p1;

// ScalarFunc:11
	float n_out11p0 = cos(n_out7p0);

// ScalarOp:14
	float n_in14p1 = 10.00000;
	float n_out14p0 = n_out11p0 / n_in14p1;

// VectorCompose:8
	float n_in8p0 = 1.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_out13p0, n_out14p0);

// VectorOp:6
	vec3 n_out6p0 = n_out2p0 * n_out8p0;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out6p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// TransformVectorMult:8
	mat4 n_in8p0 = mat4(vec4(0.00000, 1.00000, 1.00000, 0.0), vec4(1.00000, 0.00000, 0.00000, 0.0), vec4(0.00000, 0.00000, 1.00000, 0.0), vec4(0.00000, 0.00000, 0.00000, 1.0));
	vec3 n_out8p0 = (n_in8p0 * vec4(n_out6p0, 1.0)).xyz;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out8p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -316.348, 21.1435 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 580, 140 )
nodes/vertex/2/node = SubResource( 13 )
nodes/vertex/2/position = Vector2( -960, 0 )
nodes/vertex/3/node = SubResource( 14 )
nodes/vertex/3/position = Vector2( -1240, 0 )
nodes/vertex/4/node = SubResource( 15 )
nodes/vertex/4/position = Vector2( -420, 660 )
nodes/vertex/5/node = SubResource( 16 )
nodes/vertex/5/position = Vector2( 40, 280 )
nodes/vertex/6/node = SubResource( 17 )
nodes/vertex/6/position = Vector2( -400, 160 )
nodes/vertex/7/node = SubResource( 18 )
nodes/vertex/7/position = Vector2( -2260, 380 )
nodes/vertex/8/node = SubResource( 19 )
nodes/vertex/8/position = Vector2( -840, 500 )
nodes/vertex/10/node = SubResource( 8 )
nodes/vertex/10/position = Vector2( -1940, 360 )
nodes/vertex/11/node = SubResource( 9 )
nodes/vertex/11/position = Vector2( -1980, 580 )
nodes/vertex/12/node = SubResource( 10 )
nodes/vertex/12/position = Vector2( -1620, 200 )
nodes/vertex/13/node = SubResource( 11 )
nodes/vertex/13/position = Vector2( -1260, 320 )
nodes/vertex/14/node = SubResource( 12 )
nodes/vertex/14/position = Vector2( -1420, 600 )
nodes/vertex/connections = PoolIntArray( 3, 0, 2, 0, 5, 0, 0, 0, 2, 0, 6, 0, 7, 0, 10, 0, 4, 0, 5, 0, 8, 0, 6, 1, 6, 0, 5, 1, 7, 0, 11, 0, 13, 0, 8, 1, 11, 0, 14, 0, 14, 0, 8, 2, 10, 0, 13, 0 )
nodes/fragment/0/position = Vector2( 1680, 60 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 720, 20 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 200, 200 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 940, 340 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -420, 280 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 120, 360 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 5, 0, 0, 0, 6, 0, 8, 1, 8, 0, 5, 0 )

[resource]
shader = SubResource( 20 )
