[gd_resource type="ShaderMaterial" load_steps=37 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorOp" id=1]
operator = 4

[sub_resource type="Gradient" id=2]

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeTransformVecMult" id=15]
default_input_values = [ 0, Transform( 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeColorUniform" id=16]
uniform_name = "Tint"

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=26]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=31]

[sub_resource type="VisualShaderNodeVectorOp" id=32]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=33]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=34]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShader" id=35]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_19;
uniform sampler2D tex_vtx_2;
uniform sampler2D tex_frg_16;
uniform sampler2D tex_frg_11;



void vertex() {
// Input:4
	vec3 n_out4p0 = VERTEX;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:19
	vec4 tex_vtx_19_read = texture(tex_vtx_19, n_out3p0.xy);
	vec3 n_out19p0 = tex_vtx_19_read.rgb;
	float n_out19p1 = tex_vtx_19_read.a;

// Input:7
	float n_out7p0 = TIME;

// ScalarFunc:17
	float n_out17p0 = cos(n_out7p0);

// ScalarOp:21
	float n_in21p1 = 4.00000;
	float n_out21p0 = n_out17p0 / n_in21p1;

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out21p0) * n_out3p0;

// VectorCompose:15
	float n_in15p1 = 0.00000;
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(dot(n_out18p0, vec3(0.333333, 0.333333, 0.333333)), n_in15p1, n_in15p2);

// Texture:2
	vec4 tex_vtx_2_read = texture(tex_vtx_2, n_out15p0.xy);
	vec3 n_out2p0 = tex_vtx_2_read.rgb;
	float n_out2p1 = tex_vtx_2_read.a;

// ScalarFunc:10
	float n_out10p0 = sin(n_out7p0);

// ScalarOp:13
	float n_in13p1 = 10.00000;
	float n_out13p0 = n_out10p0 / n_in13p1;

// ScalarFunc:11
	float n_out11p0 = cos(n_out7p0);

// ScalarOp:14
	float n_in14p1 = 10.00000;
	float n_out14p0 = n_out11p0 / n_in14p1;

// VectorCompose:8
	float n_in8p0 = 1.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_out13p0, n_out14p0);

// VectorOp:20
	vec3 n_out20p0 = n_out2p0 + n_out8p0;

// VectorOp:6
	vec3 n_out6p0 = n_out19p0 * n_out20p0;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out6p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Texture:16
	vec4 tex_frg_16_read = texture(tex_frg_16, n_out6p0.xy);
	vec3 n_out16p0 = tex_frg_16_read.rgb;
	float n_out16p1 = tex_frg_16_read.a;

// Input:12
	float n_out12p0 = TIME;

// ScalarFunc:13
	float n_out13p0 = cos(n_out12p0);

// VectorOp:15
	vec3 n_out15p0 = vec3(n_out13p0) * n_out6p0;

// VectorCompose:14
	float n_in14p1 = 0.00000;
	float n_in14p2 = 0.00000;
	vec3 n_out14p0 = vec3(dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333)), n_in14p1, n_in14p2);

// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, n_out14p0.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// VectorOp:17
	vec3 n_out17p0 = n_out16p0 * n_out11p0;

// Output:0
	ALBEDO = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2136.84, -189.74 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 840, 100 )
nodes/vertex/2/node = SubResource( 26 )
nodes/vertex/2/position = Vector2( -980, -80 )
nodes/vertex/3/node = SubResource( 29 )
nodes/vertex/3/position = Vector2( -2720, -140 )
nodes/vertex/4/node = SubResource( 30 )
nodes/vertex/4/position = Vector2( 0, 680 )
nodes/vertex/5/node = SubResource( 31 )
nodes/vertex/5/position = Vector2( 440, 240 )
nodes/vertex/6/node = SubResource( 32 )
nodes/vertex/6/position = Vector2( 80, -120 )
nodes/vertex/7/node = SubResource( 33 )
nodes/vertex/7/position = Vector2( -2720, 160 )
nodes/vertex/8/node = SubResource( 34 )
nodes/vertex/8/position = Vector2( -840, 500 )
nodes/vertex/10/node = SubResource( 17 )
nodes/vertex/10/position = Vector2( -1940, 360 )
nodes/vertex/11/node = SubResource( 18 )
nodes/vertex/11/position = Vector2( -1940, 640 )
nodes/vertex/12/node = SubResource( 19 )
nodes/vertex/12/position = Vector2( -1620, 200 )
nodes/vertex/13/node = SubResource( 20 )
nodes/vertex/13/position = Vector2( -1420, 340 )
nodes/vertex/14/node = SubResource( 21 )
nodes/vertex/14/position = Vector2( -1420, 600 )
nodes/vertex/15/node = SubResource( 22 )
nodes/vertex/15/position = Vector2( -1340, -40 )
nodes/vertex/17/node = SubResource( 23 )
nodes/vertex/17/position = Vector2( -2400, 40 )
nodes/vertex/18/node = SubResource( 24 )
nodes/vertex/18/position = Vector2( -1680, -80 )
nodes/vertex/19/node = SubResource( 25 )
nodes/vertex/19/position = Vector2( -460, -580 )
nodes/vertex/20/node = SubResource( 27 )
nodes/vertex/20/position = Vector2( -420, 200 )
nodes/vertex/21/node = SubResource( 28 )
nodes/vertex/21/position = Vector2( -2020, 80 )
nodes/vertex/connections = PoolIntArray( 7, 0, 10, 0, 4, 0, 5, 0, 7, 0, 11, 0, 13, 0, 8, 1, 11, 0, 14, 0, 14, 0, 8, 2, 10, 0, 13, 0, 3, 0, 18, 1, 5, 0, 0, 0, 3, 0, 19, 0, 15, 0, 2, 0, 7, 0, 17, 0, 8, 0, 20, 1, 19, 0, 6, 0, 20, 0, 6, 1, 6, 0, 5, 1, 2, 0, 20, 0, 18, 0, 15, 0, 17, 0, 21, 0, 21, 0, 18, 0 )
nodes/fragment/0/position = Vector2( 1880, 0 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 580, 60 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( 200, 200 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 860, 380 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -460, 60 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 120, 360 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 880, 800 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1280, 420 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 960, -260 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( -600, -340 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( -280, -260 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( 460, -240 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 20, -100 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( 960, -620 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( 1380, -300 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 6, 0, 8, 1, 8, 0, 5, 0, 5, 0, 10, 0, 9, 0, 10, 1, 14, 0, 11, 0, 12, 0, 13, 0, 13, 0, 15, 0, 6, 0, 15, 1, 15, 0, 14, 0, 6, 0, 16, 0, 16, 0, 17, 0, 11, 0, 17, 1, 17, 0, 0, 0 )

[resource]
shader = SubResource( 35 )
